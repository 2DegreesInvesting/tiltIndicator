% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_range.R
\name{summarize_range}
\alias{summarize_range}
\title{Summarize the range of a column by groups}
\usage{
summarize_range(data, col, .by = NULL, na.rm = FALSE)
}
\arguments{
\item{data}{A dataframe.}

\item{col}{Unquoted expression giving the name of a column in \code{data}.}

\item{.by}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Optionally, a selection of columns to
group by for just this operation, functioning as an alternative to \code{\link[dplyr:group_by]{group_by()}}. For
details and examples, see \link[dplyr:dplyr_by]{?dplyr_by}.}

\item{na.rm}{a logical indicating whether missing values should be
    removed.}
}
\value{
A dataframe:
\itemize{
\item The rows come from the underlying groups.
\item The columns come from the grouping keys plus the new columns \code{min} and
\code{max}.
\item The groups are dropped.
}
}
\description{
This function is a shortcut to \code{dplyr::summarize(data, min = min(x), max = max(x))}.
}
\examples{
library(tibble)

data <- tibble(x = 1:4, group = letters[c(1, 1, 2, 2)])
data

summarize_range(data, "x", .by = "group")

lst <- split(data, data$group)
lst

summarize_range(lst, col = "x", .by = list(a = "group", b = "group"))
}
\seealso{
\code{\link[dplyr:summarise]{dplyr::summarize()}}

Other helpers: 
\code{\link{jitter_range}()},
\code{\link{unnest_product}()}
}
\concept{helpers}
