% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_range.R
\name{summarize_range}
\alias{summarize_range}
\title{Summarize the range of a column by groups}
\usage{
summarize_range(data, col, .by = NULL, na.rm = FALSE)
}
\arguments{
\item{data}{A dataframe or a list of dataframes.}

\item{col}{Unquoted expression giving the name of a column in \code{data}.}

\item{.by}{A vector or list of vectors depending on whether \code{data} is a
dataframe or list of dataframes, respective. For details see \code{.by} in
\code{\link[dplyr:summarise]{dplyr::summarize()}}.}

\item{na.rm}{a logical indicating whether missing values should be
    removed.}
}
\value{
A dataframe or a list of dataframes:
\itemize{
\item The rows come from the underlying groups.
\item The columns come from the grouping keys plus the new columns \code{min} and
\code{max}.
\item The groups are dropped.
}
}
\description{
This funciton is a generic that includes support for dataframes and lists of
dataframes. For dataframes, this function is a shortcut to
\code{dplyr::summarize(data, min = min(x), max = max(x))}. For lists of dataframes
that idea applies applies to each element of the list.
}
\examples{
library(tibble)

data <- tibble(x = 1:4, group = letters[c(1, 1, 2, 2)])
data

summarize_range(data, "x", .by = "group")

list <- split(data, data$group)
list

summarize_range(list, col = "x", .by = list(a = "group", b = "group"))
}
\seealso{
\code{\link[dplyr:summarise]{dplyr::summarize()}}

Other helpers: 
\code{\link{jitter_range}()},
\code{\link{join_to}()},
\code{\link{unnest_product}()}
}
\concept{helpers}
