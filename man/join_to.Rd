% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_to.R
\name{join_to}
\alias{join_to}
\title{Join every possible column and row}
\usage{
join_to(x, y)
}
\arguments{
\item{x, y}{A pair of data frames, data frame extensions (e.g. a tibble), or
lazy data frames (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}
}
\value{
A data frame with all columns in \code{x} and \code{y} and all rows in \code{y},
except the columns and resulting duplicates matched by the argument
\code{excluding}.
}
\description{
This function is typically useful when you want to pipe data into a summary
and then join back the data to the summary. It joins by all shared columns
using a "many-to-many" relationship.
}
\examples{
library(dplyr, warn.conflicts = FALSE)


product <- tibble(companies_id = 1:3, x = 11:13, y = letters[c(1, 1, 2)])
product

# Easy to pipe
product |>
  summarize(mean = mean(x), .by = "y") |>
  join_to(product)



# Special method for 'tilt_profile'

company <- tibble(companies_id = 1:3)
company

result <- tilt_profile(nest_levels(product, company))
result |> class()
result

# Easy to pipe.
joint <- result |>
  unnest_product() |>
  summarise(mean = mean(x), .by = "y") |>
  print() |>
  join_to(result)

# Note the summary has no shared columns with `company` so it joins nothing
joint |> unnest_company()

# Same as when joining to `product` (see avove)
joint |> unnest_product()
}
\seealso{
Other helpers: 
\code{\link{jitter_range}()},
\code{\link{summarize_range}()},
\code{\link{unnest_product}()}
}
\concept{helpers}
